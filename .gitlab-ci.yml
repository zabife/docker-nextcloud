stages:
   - build
   - deploy-desenvolvimento
   - deploy-homologacao

build:
  stage: build
  only:
    - master
    - /^Sprint.*$/
    - tags
  script:
    - docker-compose -f ./docker/13.0/apache/docker-compose.yml -f ./docker/13.0/apache/docker-compose.test.yml build
    - docker-compose push

# deploy-desenvolvimento:
#   stage: deploy-desenvolvimento
#   only:
#     - master
#     - tags
#     - /^Sprint.*$/
#   variables:
#     SUBSTITUTION: "s/version: '3'/version: '2.1'/g"
#     ENV: dev
#   script:
#     - sed -i -e "$SUBSTITUTION" docker-compose.yml
#     - sed -i -e "$SUBSTITUTION" docker-compose.override.yml
#     # Cria diretório do release e copia arquivos
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "mkdir -p /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME"
#     - scp docker-compose.yml docker-compose.override.yml gitlab@$DNS_DESENVOLVIMENTO:/srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/

#     # Copia arquivos de configuração e inicia serviço
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "cp /srv/$CI_PROJECT_NAME/env/docker-compose.$ENV.yml /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/ || true"
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "rm -f /srv/$CI_PROJECT_NAME/current"
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "ln -s /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME /srv/$CI_PROJECT_NAME/current"

#     # Baixa últimas imagens e inicia serviço
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "cd /srv/$CI_PROJECT_NAME/current && docker-compose pull || true"
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "cd /srv/$CI_PROJECT_NAME/current && docker-compose down || true"
#     - ssh -l gitlab $DNS_DESENVOLVIMENTO "cd /srv/$CI_PROJECT_NAME/current && docker-compose -f docker-compose.yml -f docker-compose.$ENV.yml up -d"

#     # 6 - Alembic migration upgrade
#     - virtualenv-3 .env
#     - source .env/bin/activate
#     - pip3 install -r requirements.txt
#     - python setup.py develop
#     - alembic -c development.ini upgrade head
#     - deactivate
#   environment: desenvolvimento
#   dependencies:
#     - build

# deploy-homologacao:
#   stage: deploy-homologacao
#   only:
#     - master
#     - tags
#   dependencies:
#     - build
#   when: manual
#   variables:
#     DOCKER_TLS_VERIFY: 1
#     ENV: hm
#   script:
#     # Cria diretório do release e copia arquivos
#     - ssh -l sisrh $DNS_HOMOLOGACAO "mkdir -p /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME"
#     - scp docker-compose.yml docker-compose.override.yml sisrh@$DNS_HOMOLOGACAO:/srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/

#     # Combina o docker-compose local da máquina com o do projeto
#     - ssh -l sisrh $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/ && docker-compose -f docker-compose.yml -f /srv/$CI_PROJECT_NAME/env/docker-compose.$ENV.yml config > docker-compose.$ENV.yml"
    
#     # Baixa últimas imagens
#     - ssh -l sisrh $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/ && docker-compose pull"

#     # Copia arquivos de configuração e inicia serviço
#     - ssh -l sisrh $DNS_HOMOLOGACAO "rm -f /srv/$CI_PROJECT_NAME/current"
#     - ssh -l sisrh $DNS_HOMOLOGACAO "ln -s /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME /srv/$CI_PROJECT_NAME/current"
#     - ssh -l sisrh $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/current && docker stack deploy -c docker-compose.$ENV.yml --with-registry-auth $CI_PROJECT_NAME"

#     # 6 - Alembic migration upgrade
#     - virtualenv-3 .env
#     - source .env/bin/activate
#     - pip3 install -r requirements.txt
#     - python setup.py develop
#     - alembic -c hm.ini upgrade head
#     - deactivate
#   environment: homologacao