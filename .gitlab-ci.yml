before_script:
# Aqui carrega as variáveis de ambiente globais
  - source /home/gitlab-runner/.env

stages:
   - build
   - deploy-desenvolvimento
   - deploy-homologacao

build:
  stage: build
  only:
    - master
    - /^Sprint.*$/
    - tags
  script:
    - docker-compose -f ./docker/13.0/apache/docker-compose.yml -f ./docker/13.0/apache/docker-compose.override.yml build
    - docker-compose -f ./docker/13.0/apache/docker-compose.yml push

deploy-desenvolvimento:
  stage: deploy-desenvolvimento
  dependencies:
    - build
  variables:
    ENV: dev
    USER: cloud
    CI_PROJECT_NAME: cloud
    DNS_DEVELOPMENT: docker-dev01.aeb.gov.br
  environment: desenvolvimento
  dependencies:
    - build
  script:
    # Cria diretório do release e copia arquivos
    - echo $USER $DNS_DEVELOPMENT $CI_COMMIT_TAG $CI_PROJECT_NAME
    - ssh -l $USER $DNS_DEVELOPMENT "mkdir -p /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG"
    - scp docker/13.0/apache/docker-compose.yml $USER@$DNS_DEVELOPMENT:/srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG/

    # Combina o docker-compose local da máquina com o do projeto
    - ssh -l $USER $DNS_DEVELOPMENT "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG/ && docker-compose -f docker-compose.yml -f /srv/$CI_PROJECT_NAME/env/docker-compose.$ENV.yml config > docker-compose.$ENV.yml"

    # Baixa últimas imagens
    - ssh -l $USER $DNS_DEVELOPMENT "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG/ && docker-compose pull"

    # Copia arquivos de configuração e inicia serviço
    - ssh -l $USER $DNS_DEVELOPMENT "rm -f /srv/$CI_PROJECT_NAME/current"
    - ssh -l $USER $DNS_DEVELOPMENT "ln -s /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG /srv/$CI_PROJECT_NAME/current"
    - ssh -l $USER $DNS_DEVELOPMENT "cd /srv/$CI_PROJECT_NAME/current && docker stack deploy -c docker-compose.$ENV.yml --with-registry-auth $CI_PROJECT_NAME"


deploy-homologacao:
  stage: deploy-homologacao
  only:
    - tags
  dependencies:
    - build
  when: manual
  variables:
    DOCKER_TLS_VERIFY: 1
    ENV: hm
    USER: cloud
    CI_PROJECT_NAME: cloud
  script:
    # Cria diretório do release e copia arquivos
    - ssh -l $USER $DNS_HOMOLOGACAO "mkdir -p /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG"
    - scp docker-compose.yml $USER@$DNS_HOMOLOGACAO:/srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG/

    # Combina o docker-compose local da máquina com o do projeto
    - ssh -l $USER $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG/ && docker-compose -f docker-compose.yml -f /srv/$CI_PROJECT_NAME/env/docker-compose.$ENV.yml config > docker-compose.$ENV.yml"

    # Baixa últimas imagens
    - ssh -l $USER $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG/ && docker-compose pull"

    # Copia arquivos de configuração e inicia serviço
    - ssh -l $USER $DNS_HOMOLOGACAO "rm -f /srv/$CI_PROJECT_NAME/current"
    - ssh -l $USER $DNS_HOMOLOGACAO "ln -s /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_TAG /srv/$CI_PROJECT_NAME/current"
    - ssh -l $USER $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/current && docker stack deploy -c docker-compose.$ENV.yml --with-registry-auth $CI_PROJECT_NAME"

  environment: homologacao