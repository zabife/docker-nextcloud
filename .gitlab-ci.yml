stages:
   - build
   - deploy-desenvolvimento
   - deploy-homologacao

build:
  stage: build
  only:
    - master
    - /^Sprint.*$/
    - tags
  script:
    - docker-compose -f ./docker/13.0/apache/docker-compose.yml -f ./docker/13.0/apache/docker-compose.override.yml build
    - docker-compose -f ./docker/13.0/apache/docker-compose.yml push

deploy-desenvolvimento:
  stage: deploy-desenvolvimento
  only:
    - master
    - tags
    - /^Sprint.*$/
  variables:
    SUBSTITUTION: "s/version: '3'/version: '2.1'/g"
    DNS_DESENVOLVIMENTO: docker.aeb.gov.br
    USER_DESENVOLVIMENTO: nextcloud
  script:
    - export CI_COMMIT_TAG=${CI_COMMIT_TAG:-latest}
    
    - sed -i -e "$SUBSTITUTION" docker/13.0/apache/docker-compose.yml
    - scp docker/13.0/apache/docker-compose.yml gitlab@$DNS_DESENVOLVIMENTO:/srv/nextcloud/.
    
    - sed -i -e "$SUBSTITUTION" docker/13.0/apache/docker-compose.override.yml
    - scp docker/13.0/apache/docker-compose.override.yml gitlab@$DNS_DESENVOLVIMENTO:/srv/nextcloud/.
    
    - ssh -l gitlab $DNS_DESENVOLVIMENTO docker-compose down || true
    - ssh -l gitlab $DNS_DESENVOLVIMENTO "export CI_COMMIT_TAG=${CI_COMMIT_TAG:-latest} && mkdir -p frontend && mkdir -p backend && docker-compose pull"
    - ssh -l gitlab $DNS_DESENVOLVIMENTO "export ENV=docker DEPLOY_MODE=docker CI_COMMIT_TAG=${CI_COMMIT_TAG:-latest} && docker-compose up -d"
  environment: desenvolvimento
  dependencies:
    - build

# deploy-homologacao:
#   stage: deploy-homologacao
#   only:
#     - master
#     - tags
#   dependencies:
#     - build
#   when: manual
#   variables:
#     DOCKER_TLS_VERIFY: 1
#     ENV: hm
#   script:
#     # Cria diretório do release e copia arquivos
#     - ssh -l sisrh $DNS_HOMOLOGACAO "mkdir -p /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME"
#     - scp docker-compose.yml docker-compose.override.yml sisrh@$DNS_HOMOLOGACAO:/srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/

#     # Combina o docker-compose local da máquina com o do projeto
#     - ssh -l sisrh $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/ && docker-compose -f docker-compose.yml -f /srv/$CI_PROJECT_NAME/env/docker-compose.$ENV.yml config > docker-compose.$ENV.yml"
    
#     # Baixa últimas imagens
#     - ssh -l sisrh $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME/ && docker-compose pull"

#     # Copia arquivos de configuração e inicia serviço
#     - ssh -l sisrh $DNS_HOMOLOGACAO "rm -f /srv/$CI_PROJECT_NAME/current"
#     - ssh -l sisrh $DNS_HOMOLOGACAO "ln -s /srv/$CI_PROJECT_NAME/releases/$CI_COMMIT_REF_NAME /srv/$CI_PROJECT_NAME/current"
#     - ssh -l sisrh $DNS_HOMOLOGACAO "cd /srv/$CI_PROJECT_NAME/current && docker stack deploy -c docker-compose.$ENV.yml --with-registry-auth $CI_PROJECT_NAME"

#     # 6 - Alembic migration upgrade
#     - virtualenv-3 .env
#     - source .env/bin/activate
#     - pip3 install -r requirements.txt
#     - python setup.py develop
#     - alembic -c hm.ini upgrade head
#     - deactivate
#   environment: homologacao